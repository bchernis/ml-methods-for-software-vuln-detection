static void *zend_mm_chunk_alloc_int(size_t size, size_t alignment){
 void *ptr = zend_mm_mmap(size);

 if (ptr == NULL){
  return NULL;
 } else if (ZEND_MM_ALIGNED_OFFSET(ptr, alignment) == 0){
#ifdef MADV_HUGEPAGE
     madvise(ptr, size, MADV_HUGEPAGE);
#endif
  return ptr;
 } else{
  size_t offset;


  zend_mm_munmap(ptr, size);
  ptr = zend_mm_mmap(size + alignment - REAL_PAGE_SIZE);
#ifdef _WIN32
  offset = ZEND_MM_ALIGNED_OFFSET(ptr, alignment);
  zend_mm_munmap(ptr, size + alignment - REAL_PAGE_SIZE);
  ptr = zend_mm_mmap_fixed((void*)((char*)ptr + (alignment - offset)), size);
  offset = ZEND_MM_ALIGNED_OFFSET(ptr, alignment);
  if (offset != 0){
   zend_mm_munmap(ptr, size);
   return NULL;
  }
  return ptr;
#else
  offset = ZEND_MM_ALIGNED_OFFSET(ptr, alignment);
  if (offset != 0){
   offset = alignment - offset;
   zend_mm_munmap(ptr, offset);
   ptr = (char*)ptr + offset;
   alignment -= offset;
  }
  if (alignment > REAL_PAGE_SIZE){
   zend_mm_munmap((char*)ptr + size, alignment - REAL_PAGE_SIZE);
  }
# ifdef MADV_HUGEPAGE
     madvise(ptr, size, MADV_HUGEPAGE);
# endif
#endif
  return ptr;
 }
}
