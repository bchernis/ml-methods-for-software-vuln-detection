static int uio_mmap(struct file *filep, struct vm_area_struct *vma){
 struct uio_listener *listener = filep->private_data;
 struct uio_device *idev = listener->dev;
 int mi;
 unsigned long requested_pages, actual_pages;
 int ret = 0;

 if (vma->vm_end < vma->vm_start)
  return -EINVAL;

 vma->vm_private_data = idev;

 mi = uio_find_mem_index(vma);
 if (mi < 0)
  return -EINVAL;

 requested_pages = vma_pages(vma);
 actual_pages = ((idev->info->mem[mi].addr & ~PAGE_MASK)
   + idev->info->mem[mi].size + PAGE_SIZE -1) >> PAGE_SHIFT;
 if (requested_pages > actual_pages)
  return -EINVAL;

 if (idev->info->mmap){
  ret = idev->info->mmap(idev->info, vma);
  return ret;
 }

 switch (idev->info->mem[mi].memtype){
  case UIO_MEM_PHYS:
   return uio_mmap_physical(vma);
  case UIO_MEM_LOGICAL:
  case UIO_MEM_VIRTUAL:
   return uio_mmap_logical(vma);
  default:
   return -EINVAL;
 }
}
