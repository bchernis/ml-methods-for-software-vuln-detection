static void kvm_write_wall_clock(struct kvm *kvm, gpa_t wall_clock){
 int version;
 int r;
 struct pvclock_wall_clock wc;
 struct timespec boot;

 if (!wall_clock)
  return;

 r = kvm_read_guest(kvm, wall_clock, &version, sizeof(version));
 if (r)
  return;

 if (version & 1)
  ++version;

 ++version;

 kvm_write_guest(kvm, wall_clock, &version, sizeof(version));







 getboottime(&boot);

 if (kvm->arch.kvmclock_offset){
  struct timespec ts = ns_to_timespec(kvm->arch.kvmclock_offset);
  boot = timespec_sub(boot, ts);
 }
 wc.sec = boot.tv_sec;
 wc.nsec = boot.tv_nsec;
 wc.version = version;

 kvm_write_guest(kvm, wall_clock, &wc, sizeof(wc));

 version++;
 kvm_write_guest(kvm, wall_clock, &version, sizeof(version));
}
