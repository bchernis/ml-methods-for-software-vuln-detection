static int virtnet_set_mac_address(struct net_device *dev, void *p){
 struct virtnet_info *vi = netdev_priv(dev);
 struct virtio_device *vdev = vi->vdev;
 int ret;
 struct sockaddr *addr = p;
 struct scatterlist sg;

 ret = eth_prepare_mac_addr_change(dev, p);
 if (ret)
  return ret;

 if (virtio_has_feature(vdev, VIRTIO_NET_F_CTRL_MAC_ADDR)){
  sg_init_one(&sg, addr->sa_data, dev->addr_len);
  if (!virtnet_send_command(vi, VIRTIO_NET_CTRL_MAC,
       VIRTIO_NET_CTRL_MAC_ADDR_SET, &sg)){
   dev_warn(&vdev->dev,
     "Failed to set mac address by vq command.\n");
   return -EINVAL;
  }
 } else if (virtio_has_feature(vdev, VIRTIO_NET_F_MAC) &&
     !virtio_has_feature(vdev, VIRTIO_F_VERSION_1)){
  unsigned int i;


  for (i = 0; i < dev->addr_len; i++)
   virtio_cwrite8(vdev,
           offsetof(struct virtio_net_config, mac) +
           i, addr->sa_data[i]);
 }

 eth_commit_mac_addr_change(dev, p);

 return 0;
}
