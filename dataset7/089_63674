cpTag(TIFF* in, TIFF* out, uint16 tag, uint16 count, TIFFDataType type){
 switch (type){
 case TIFF_SHORT:
  if (count == 1){
   uint16 shortv;
   CopyField(tag, shortv);
  } else if (count == 2){
   uint16 shortv1, shortv2;
   CopyField2(tag, shortv1, shortv2);
  } else if (count == 4){
   uint16 *tr, *tg, *tb, *ta;
   CopyField4(tag, tr, tg, tb, ta);
  } else if (count == (uint16) -1){
   uint16 shortv1;
   uint16* shortav;
   CopyField2(tag, shortv1, shortav);
  }
  break;
 case TIFF_LONG:{ uint32 longv;
    CopyField(tag, longv);
  }
  break;
 case TIFF_RATIONAL:
  if (count == 1){
   float floatv;
   CopyField(tag, floatv);
  } else if (count == (uint16) -1){
   float* floatav;
   CopyField(tag, floatav);
  }
  break;
 case TIFF_ASCII:{ char* stringv;
    CopyField(tag, stringv);
  }
  break;
 case TIFF_DOUBLE:
  if (count == 1){
   double doublev;
   CopyField(tag, doublev);
  } else if (count == (uint16) -1){
   double* doubleav;
   CopyField(tag, doubleav);
  }
  break;
 default:
  TIFFError(TIFFFileName(in),
      "Data type %d is not supported, tag %d skipped.",
      tag, type);
 }
}
