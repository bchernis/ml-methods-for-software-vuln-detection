static void udf_open_lvid(struct super_block *sb){
 struct udf_sb_info *sbi = UDF_SB(sb);
 struct buffer_head *bh = sbi->s_lvid_bh;
 struct logicalVolIntegrityDesc *lvid;
 struct logicalVolIntegrityDescImpUse *lvidiu;

 if (!bh)
  return;

 mutex_lock(&sbi->s_alloc_mutex);
 lvid = (struct logicalVolIntegrityDesc *)bh->b_data;
 lvidiu = udf_sb_lvidiu(sbi);

 lvidiu->impIdent.identSuffix[0] = UDF_OS_CLASS_UNIX;
 lvidiu->impIdent.identSuffix[1] = UDF_OS_ID_LINUX;
 udf_time_to_disk_stamp(&lvid->recordingDateAndTime,
    CURRENT_TIME);
 lvid->integrityType = cpu_to_le32(LVID_INTEGRITY_TYPE_OPEN);

 lvid->descTag.descCRC = cpu_to_le16(
  crc_itu_t(0, (char *)lvid + sizeof(struct tag),
   le16_to_cpu(lvid->descTag.descCRCLength)));

 lvid->descTag.tagChecksum = udf_tag_checksum(&lvid->descTag);
 mark_buffer_dirty(bh);
 sbi->s_lvid_dirty = 0;
 mutex_unlock(&sbi->s_alloc_mutex);
}
