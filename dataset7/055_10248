int kvm_arch_vcpu_ioctl_run(struct kvm_vcpu *vcpu, struct kvm_run *kvm_run){
 int r;
 sigset_t sigsaved;

 if (!tsk_used_math(current) && init_fpu(current))
  return -ENOMEM;

 if (vcpu->sigset_active)
  sigprocmask(SIG_SETMASK, &vcpu->sigset, &sigsaved);

 if (unlikely(vcpu->arch.mp_state == KVM_MP_STATE_UNINITIALIZED)){
  kvm_vcpu_block(vcpu);
  kvm_apic_accept_events(vcpu);
  clear_bit(KVM_REQ_UNHALT, &vcpu->requests);
  r = -EAGAIN;
  goto out;
 }


 if (!irqchip_in_kernel(vcpu->kvm)){
  if (kvm_set_cr8(vcpu, kvm_run->cr8) != 0){
   r = -EINVAL;
   goto out;
  }
 }

 if (unlikely(vcpu->arch.complete_userspace_io)){
  int (*cui)(struct kvm_vcpu *) = vcpu->arch.complete_userspace_io;
  vcpu->arch.complete_userspace_io = NULL;
  r = cui(vcpu);
  if (r <= 0)
   goto out;
 } else
  WARN_ON(vcpu->arch.pio.count || vcpu->mmio_needed);

 r = __vcpu_run(vcpu);

out:
 post_kvm_run_save(vcpu);
 if (vcpu->sigset_active)
  sigprocmask(SIG_SETMASK, &sigsaved, NULL);

 return r;
}
