static zend_long zend_mm_find_leaks_small(zend_mm_chunk *p, int i, int j, zend_leak_info *leak){
    int empty = 1;
 zend_long count = 0;
 int bin_num = ZEND_MM_SRUN_BIN_NUM(p->map[i]);
 zend_mm_debug_info *dbg = (zend_mm_debug_info*)((char*)p + ZEND_MM_PAGE_SIZE * i + bin_data_size[bin_num] * (j + 1) - ZEND_MM_ALIGNED_SIZE(sizeof(zend_mm_debug_info)));

 while (j < bin_elements[bin_num]){
  if (dbg->size != 0){
   if (dbg->filename == leak->filename && dbg->lineno == leak->lineno){
    count++;
    dbg->size = 0;
    dbg->filename = NULL;
    dbg->lineno = 0;
   } else{
    empty = 0;
   }
  }
  j++;
  dbg = (zend_mm_debug_info*)((char*)dbg + bin_data_size[bin_num]);
 }
 if (empty){
  zend_mm_bitset_reset_range(p->free_map, i, bin_pages[bin_num]);
 }
 return count;
}
