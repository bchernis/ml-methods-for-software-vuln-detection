static int kvm_read_guest_virt_helper(gva_t addr, void *val, unsigned int bytes,
          struct kvm_vcpu *vcpu, u32 access,
          struct x86_exception *exception){
 void *data = val;
 int r = X86EMUL_CONTINUE;

 while (bytes){
  gpa_t gpa = vcpu->arch.walk_mmu->gva_to_gpa(vcpu, addr, access,
           exception);
  unsigned offset = addr & (PAGE_SIZE-1);
  unsigned toread = min(bytes, (unsigned)PAGE_SIZE - offset);
  int ret;

  if (gpa == UNMAPPED_GVA)
   return X86EMUL_PROPAGATE_FAULT;
  ret = kvm_read_guest(vcpu->kvm, gpa, data, toread);
  if (ret < 0){
   r = X86EMUL_IO_NEEDED;
   goto out;
  }

  bytes -= toread;
  data += toread;
  addr += toread;
 }
out:
 return r;
}
