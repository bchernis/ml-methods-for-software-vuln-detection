void CLASS lin_interpolate(){
  int code[16][16][32], *ip, sum[4];
  int c, i, x, y, row, col, shift, color;
  ushort *pix;

  dcraw_message (DCRAW_VERBOSE,_("Bilinear interpolation...\n"));

  border_interpolate(1);
  for (row=0; row < 16; row++)
    for (col=0; col < 16; col++){
      ip = code[row][col];
      memset (sum, 0, sizeof sum);
      for (y=-1; y <= 1; y++)
 for (x=-1; x <= 1; x++){
   shift = (y==0) + (x==0);
   if (shift == 2) continue;
   color = fc(row+y,col+x);
   *ip++ = (width*y + x)*4 + color;
   *ip++ = shift;
   *ip++ = color;
   sum[color] += 1 << shift;
 }
      FORCC
 if (c != fc(row,col)){
   *ip++ = c;
   *ip++ = 256 / sum[c];
 }
    }
  for (row=1; row < height-1; row++)
    for (col=1; col < width-1; col++){
      pix = image[row*width+col];
      ip = code[row & 15][col & 15];
      memset (sum, 0, sizeof sum);
      for (i=8; i--; ip+=3)
 sum[ip[2]] += pix[ip[0]] << ip[1];
      for (i=colors; --i; ip+=2)
 pix[ip[0]] = sum[ip[0]] * ip[1] >> 8;
    }
}
