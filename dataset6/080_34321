read_compound(FILE *fd, slang_T *slang, int len){
    int todo = len;
    int c;
    int atstart;
    char_u *pat;
    char_u *pp;
    char_u *cp;
    char_u *ap;
    char_u *crp;
    int cnt;
    garray_T *gap;

    if (todo < 2)
 return SP_FORMERROR;

    --todo;
    c = getc(fd);
    if (c < 2)
 c = MAXWLEN;
    slang->sl_compmax = c;

    --todo;
    c = getc(fd);
    if (c < 1)
 c = 0;
    slang->sl_compminlen = c;

    --todo;
    c = getc(fd);
    if (c < 1)
 c = MAXWLEN;
    slang->sl_compsylmax = c;

    c = getc(fd);
    if (c != 0)
 ungetc(c, fd);
    else{
 --todo;
 c = getc(fd);
 --todo;
 slang->sl_compoptions = c;

 gap = &slang->sl_comppat;
 c = get2c(fd);
 todo -= 2;
 ga_init2(gap, sizeof(char_u *), c);
 if (ga_grow(gap, c) == OK)
     while (--c >= 0){
  ((char_u **)(gap->ga_data))[gap->ga_len++] =
       read_cnt_string(fd, 1, &cnt);

  if (cnt < 0)
      return cnt;
  todo -= cnt + 1;
     }
    }
    if (todo < 0)
 return SP_FORMERROR;





    c = todo * 2 + 7;
#ifdef FEAT_MBYTE
    if (enc_utf8)
 c += todo * 2;
#endif
    pat = alloc((unsigned)c);
    if (pat == NULL)
 return SP_OTHERERROR;



    cp = alloc(todo + 1);
    if (cp == NULL){
 vim_free(pat);
 return SP_OTHERERROR;
    }
    slang->sl_compstartflags = cp;
    *cp = NUL;

    ap = alloc(todo + 1);
    if (ap == NULL){
 vim_free(pat);
 return SP_OTHERERROR;
    }
    slang->sl_compallflags = ap;
    *ap = NUL;




    crp = alloc(todo + 1);
    slang->sl_comprules = crp;

    pp = pat;
    *pp++ = '^';
    *pp++ = '\\';
    *pp++ = '(';

    atstart = 1;
    while (todo-- > 0){
 c = getc(fd);
 if (c == EOF){
     vim_free(pat);
     return SP_TRUNCERROR;
 }


 if (vim_strchr((char_u *)"?*+[]/", c) == NULL
  && !byte_in_str(slang->sl_compallflags, c)){
     *ap++ = c;
     *ap = NUL;
 }

 if (atstart != 0){


     if (c == '[')
  atstart = 2;
     else if (c == ']')
  atstart = 0;
     else{
  if (!byte_in_str(slang->sl_compstartflags, c)){
      *cp++ = c;
      *cp = NUL;
  }
  if (atstart == 1)
      atstart = 0;
     }
 }


 if (crp != NULL){
     if (c == '?' || c == '+' || c == '*'){
  vim_free(slang->sl_comprules);
  slang->sl_comprules = NULL;
  crp = NULL;
     }
     else
  *crp++ = c;
 }

 if (c == '/'){
     *pp++ = '\\';
     *pp++ = '|';
     atstart = 1;
 }
 else{
     if (c == '?' || c == '+' || c == '~')
  *pp++ = '\\';
#ifdef FEAT_MBYTE
     if (enc_utf8)
  pp += mb_char2bytes(c, pp);
     else
#endif
  *pp++ = c;
 }
    }

    *pp++ = '\\';
    *pp++ = ')';
    *pp++ = '$';
    *pp = NUL;

    if (crp != NULL)
 *crp = NUL;

    slang->sl_compprog = vim_regcomp(pat, RE_MAGIC + RE_STRING + RE_STRICT);
    vim_free(pat);
    if (slang->sl_compprog == NULL)
 return SP_FORMERROR;

    return 0;
}
